<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->

<!--
  | Improvements:
  |
  | o add specification element to a field, this would be more a technical description of
  |   what is allowed in the field.
  |
  | o validators: there could be several levels of validation. Simple type validation could
  |   be done with a regex, but we need inter-field validation and rules which could be
  |   dealt with by something like drools.
  |
  | o i18n: would be good to be able to have names/descriptions/specifications
  |   in as many languages as possible. (see MNG-3626)
  |
  | o annotation mechanism so that changes to the model can be accurately tracked.
  |
  | o need to clean up all the descriptions, matching anything to the current project-descriptor.xml file and
  |   improving on that
  |
  | o use enums where appropriate (eg dependency scope)
  |
  | o a number of elements have a groupId/artifactId and sometimes version. It would be good to have them all extend one
  |   definition of these types
  |
-->
<model xmlns="http://codehaus-plexus.github.io/MODELLO/1.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://codehaus-plexus.github.io/MODELLO/1.4.0 http://codehaus-plexus.github.io/modello/xsd/modello-1.4.0.xsd"
  xml.namespace="http://maven.apache.org/POM/${version}"
  xml.schemaLocation="http://maven.apache.org/xsd/maven-consumer-${version}.xsd">
  <id>maven-consumer</id>
  <name>MavenConsumer</name>
  <description>
    <![CDATA[
    <p>This is a reference for the Maven Consumer project descriptor used in Maven.</p>
    <p>An XSD is available at:</p>
    <ul>
      <li><a href="https://maven.apache.org/xsd/maven-4.0.0.xsd">https://maven.apache.org/xsd/maven-4.0.0.xsd</a> for Maven 2.0.</li>
    </ul>
    ]]>
  </description>
  <defaults>
    <default>
      <key>package</key>
      <value>org.apache.maven.consumer.model</value>
    </default>
  </defaults>
  <classes>
    <class rootElement="true" xml.tagName="project" java.clone.hook="cloneHook">
      <name>Model</name>
      <superClass>ModelBase</superClass>
      <description>
        <![CDATA[
        The <code>&lt;project&gt;</code> element is the root of the descriptor.
        The following table lists all of the possible child elements.
        ]]>
      </description>
      <version>3.0.0+</version>
      <fields>

        <!-- ====================================================================== -->
        <!-- Model Version                                                          -->
        <!-- ====================================================================== -->

        <field>
          <name>modelVersion</name>
          <version>4.0.0+</version>
          <required>true</required>
          <description>Declares to which version of project descriptor this POM conforms.</description>
          <type>String</type>
        </field>

        <!-- ====================================================================== -->
        <!-- groupId/artifactId/Version/Packaging                                   -->
        <!-- ====================================================================== -->

        <field xdoc.separator="blank">
          <name>groupId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            <![CDATA[
            A universally unique identifier for a project. It is normal to
            use a fully-qualified package name to distinguish it from other
            projects with a similar name (eg. <code>org.apache.maven</code>).
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The identifier for this artifact that is unique within the group given by the
            group ID. An artifact is something that is either produced or used by a project.
            Examples of artifacts produced by Maven for a project include: JARs, source and binary
            distributions, and WARs.</description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>4.0.0+</version>
          <required>true</required>
          <description>The current version of the artifact produced by this project.</description>
          <type>String</type>
        </field>
        <field>
          <name>packaging</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The type of artifact this project produces, for example <code>jar</code>
              <code>war</code>
              <code>ear</code>
              <code>pom</code>.
            Plugins can create their own packaging, and
            therefore their own packaging types,
            so this list does not contain all possible types.
            ]]>
          </description>
          <type>String</type>
          <defaultValue>jar</defaultValue>
        </field>

        <!-- ====================================================================== -->
        <!-- Elements which describe a project                                      -->
        <!-- ====================================================================== -->

        <field xdoc.separator="blank">
          <name>name</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The full name of the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>description</name>
          <version>3.0.0+</version>
          <description>A detailed description of the project, used by Maven whenever it needs to
            describe the project, such as on the web site. While this element can be specified as
            CDATA to enable the use of HTML tags within the description, it is discouraged to allow
            plain text representation. If you need to modify the index page of the generated web
            site, you are able to specify your own instead of adjusting this text.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The URL to the project's homepage.
            <br><b>Default value is</b>: parent value [+ path adjustment] + (artifactId or <code>project.directory</code> property)
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>inceptionYear</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The year of the project's inception, specified with 4 digits. This value is
            used when generating copyright notices as well as being informational.</description>
          <type>String</type>
        </field>
        <field>
          <name>organization</name>
          <version>3.0.0+</version>
          <description>This element describes various attributes of the organization to which the
            project belongs. These attributes are utilized when documentation is created (for
            copyright notices and links).</description>
          <alias>organisation</alias>
          <association>
            <type>Organization</type>
          </association>
        </field>
        <field>
          <name>licenses</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            This element describes all of the licenses for this project.
            Each license is described by a <code>license</code> element, which
            is then described by additional elements.
            Projects should only list the license(s) that applies to the project
            and not the licenses that apply to dependencies.
            If multiple licenses are listed, it is assumed that the user can select
            any of them, not that they must accept all.
            ]]>
          </description>
          <association>
            <type>License</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field xdoc.separator="blank">
          <name>developers</name>
          <version>3.0.0+</version>
          <description>Describes the committers of a project.</description>
          <association>
            <type>Developer</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field><!-- TBD keep in consumer? -->
          <name>contributors</name>
          <version>3.0.0+</version>
          <description>Describes the contributors to a project that are not yet committers.</description>
          <association>
            <type>Contributor</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field xdoc.separator="blank"><!-- TBD keep in consumer? -->
          <name>mailingLists</name>
          <version>3.0.0+</version>
          <description>Contains information about a project's mailing lists.</description>
          <association>
            <type>MailingList</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>

        <!-- ====================================================================== -->
        <!-- Build prerequisites                                                    -->
        <!-- ====================================================================== -->

        <field xdoc.separator="blank">
          <name>prerequisites</name>
          <version>4.0.0+</version>
          <description>Describes the prerequisites in the build environment for this project.</description>
          <association>
            <type>Prerequisites</type>
          </association>
        </field>

        <!-- ====================================================================== -->
        <!-- SCM                                                                    -->
        <!-- ====================================================================== -->

        <field xdoc.separator="blank">
          <name>scm</name>
          <version>4.0.0+</version>
          <description>Specification for the SCM used by the project, such as CVS, Subversion, etc.</description>
          <association>
            <type>Scm</type>
          </association>
        </field>

        <!-- ====================================================================== -->
        <!-- Issue Tracking                                                         -->
        <!-- ====================================================================== -->

        <field>
          <name>issueManagement</name>
          <version>4.0.0+</version>
          <description>The project's issue management system information.</description>
          <association>
            <type>IssueManagement</type>
          </association>
        </field>

        <!-- ====================================================================== -->
        <!-- Profiles                                                               -->
        <!-- ====================================================================== -->

        <field xdoc.separator="blank" xml.insertParentFieldsUpTo="repositories">
          <name>profiles</name>
          <version>4.0.0+</version>
          <description>A listing of project-local build profiles which will modify the build process
            when activated.</description>
          <association>
            <type>Profile</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[
    private void cloneHook( Model copy )
    {
        copy.pomFile = pomFile;
    }

    /**
     * The POM from which this model originated. This is transient runtime state and therefore not managed by Modello.
     */
    private java.io.File pomFile;

    /**
     * Gets the POM file for the corresponding project (if any).
     *
     * @return The POM file from which this model originated or {@code null} if this model does not belong to a local
     *         project (e.g. describes the metadata of some artifact from the repository).
     */
    public java.io.File getPomFile()
    {
        return pomFile;
    }

    public void setPomFile( java.io.File pomFile )
    {
        this.pomFile = ( pomFile != null ) ? pomFile.getAbsoluteFile() : null;
    }

    /**
     * Gets the base directory for the corresponding project (if any).
     *
     * @return The base directory for the corresponding project or {@code null} if this model does not belong to a local
     *         project (e.g. describes the metadata of some artifact from the repository).
     */
    public java.io.File getProjectDirectory()
    {
        return ( pomFile != null ) ? pomFile.getParentFile() : null;
    }

    /**
     * @return the model id as <code>groupId:artifactId:packaging:version</code>
     */
    public String getId()
    {
        StringBuilder id = new StringBuilder( 64 );

        id.append( ( getGroupId() == null ) ? "[inherited]" : getGroupId() );
        id.append( ":" );
        id.append( getArtifactId() );
        id.append( ":" );
        id.append( getPackaging() );
        id.append( ":" );
        id.append( ( getVersion() == null ) ? "[inherited]" : getVersion() );

        return id.toString();
    }

    @Override
    public String toString()
    {
        return getId();
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class java.clone="deep">
      <name>ModelBase</name>
      <version>3.0.0+</version>
      <description>
        <![CDATA[
        Base class for the <code>Model</code> and the <code>Profile</code> objects.
        ]]>
      </description>
      <fields>
        <field xdoc.separator="blank">
          <name>dependencies</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            This element describes all of the dependencies associated with a
            project.
            These dependencies are used to construct a classpath for your
            project during the build process. They are automatically downloaded from the
            repositories defined in this project.
            See <a href="https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html">the
            dependency mechanism</a> for more information.
            ]]>
          </description>
          <association>
            <type>Dependency</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field xdoc.separator="blank"><!-- TBD keep in consumer? -->
          <name>repositories</name>
          <version>4.0.0+</version>
          <description>The lists of the remote repositories for discovering dependencies and
            extensions.</description>
          <association>
            <type>Repository</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>Contributor</name>
      <description>Description of a person who has contributed to the project, but who does not have
        commit privileges. Usually, these contributions come in the form of patches submitted.</description>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full name of the contributor.</description>
          <type>String</type>
        </field>
        <field>
          <name>email</name>
          <version>3.0.0+</version>
          <description>The email address of the contributor.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The URL for the homepage of the contributor.</description>
          <type>String</type>
        </field>
        <!-- TODO: should this just be a single Organization element -->
        <field>
          <name>organization</name>
          <alias>organisation</alias>
          <version>3.0.0+</version>
          <description>The organization to which the contributor belongs.</description>
          <type>String</type>
        </field>
        <field>
          <name>organizationUrl</name>
          <alias>organisationUrl</alias>
          <version>3.0.0+</version>
          <description>The URL of the organization.</description>
          <type>String</type>
        </field>
        <field>
          <name>roles</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The roles the contributor plays in the project. Each role is described by a
            <code>role</code> element, the body of which is a role name. This can also be used to
            describe the contribution.
            ]]>
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>timezone</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
              The timezone the contributor is in. Typically, this is a number in the range
              <a href="http://en.wikipedia.org/wiki/UTC%E2%88%9212:00">-12</a> to <a href="http://en.wikipedia.org/wiki/UTC%2B14:00">+14</a>
              or a valid time zone id like "America/Montreal" (UTC-05:00) or "Europe/Paris" (UTC+01:00).
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>properties</name>
          <version>3.0.0+</version>
          <description>Properties about the contributor, such as an instant messenger handle.</description>
          <type>Properties</type>
          <association xml.mapStyle="inline">
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>Dependency</name>
      <version>3.0.0+</version>
      <description>
        <![CDATA[
        The <code>&lt;dependency&gt;</code> element contains information about a dependency
        of the project.
        ]]>
      </description>
      <fields>
        <field>
          <name>groupId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            <![CDATA[
            The project group that produced the dependency, e.g.
            <code>org.apache.maven</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            <![CDATA[
            The unique id for an artifact produced by the project group, e.g.
            <code>maven-artifact</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The version of the dependency, e.g. <code>3.2.1</code>. In Maven 2, this can also be
            specified as a range of versions.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The type of dependency. While it
            usually represents the extension on the filename of the dependency,
            that is not always the case. A type can be mapped to a different
            extension and a classifier.
            The type often corresponds to the packaging used, though this is also
            not always the case.
            Some examples are <code>jar</code>, <code>war</code>, <code>ejb-client</code>
            and <code>test-jar</code>: see <a href="../maven-core/artifact-handlers.html">default
            artifact handlers</a> for a list.
            New types can be defined by plugins that set
            <code>extensions</code> to <code>true</code>, so this is not a complete list.
            ]]>
          </description>
          <type>String</type>
          <defaultValue>jar</defaultValue>
        </field>
        <field>
          <name>classifier</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The classifier of the dependency. It is appended to
            the filename after the version. This allows:
            <ul>
            <li>referring to attached artifact, for example <code>sources</code> and <code>javadoc</code>:
            see <a href="../maven-core/artifact-handlers.html">default artifact handlers</a> for a list,</li>
            <li>distinguishing two artifacts
            that belong to the same POM but were built differently.
            For example, <code>jdk14</code> and <code>jdk15</code>.</li>
            </ul>
            ]]>
          </description>
          <type>String</type>
          <required>false</required>
        </field>
        <field>
          <name>scope</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The scope of the dependency - <code>compile</code>, <code>runtime</code>,
            <code>test</code>, <code>system</code>, and <code>provided</code>. Used to
            calculate the various classpaths used for compilation, testing, and so on.
            It also assists in determining which artifacts to include in a distribution of
            this project. For more information, see
            <a href="https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html">the
            dependency mechanism</a>. The default scope is <code>compile</code>.
            ]]>
          </description>
          <type>String</type>
          <!-- This default has to be enforced at the maven-artifact layer, to allow
            | injection of defaults from <dependencyManagement/>.
            | TODO: how can we document it?
            |-->
          <!-- defaultValue>compile</defaultValue -->
        </field>
        <field>
          <name>systemPath</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            FOR SYSTEM SCOPE ONLY. Note that use of this property is <b>discouraged</b>
            and may be replaced in later versions. This specifies the path on the filesystem
            for this dependency.
            Requires an absolute path for the value, not relative.
            Use a property that gives the machine specific absolute path,
            e.g. <code>${java.home}</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>exclusions</name>
          <version>4.0.0+</version>
          <description>Lists a set of artifacts that should be excluded from this dependency's
            artifact list when it comes to calculating transitive dependencies.</description>
          <association>
            <type>Exclusion</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>optional</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            Indicates the dependency is optional for use of this library. While the
            version of the dependency will be taken into account for dependency calculation if the
            library is used elsewhere, it will not be passed on transitively. Note: While the type
            of this field is <code>String</code> for technical reasons, the semantic type is actually
            <code>Boolean</code>. Default value is <code>false</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[
    public boolean isOptional()
    {
        return ( optional != null ) ? Boolean.parseBoolean( optional ) : false;
    }

    public void setOptional( boolean optional )
    {
        this.optional = String.valueOf( optional );
    }

    /**
     * @see java.lang.Object#toString()
     */
    public String toString()
    {
        return "Dependency {groupId=" + groupId + ", artifactId=" + artifactId + ", version=" + version + ", type=" + type + "}";
    }
            ]]>
          </code>
        </codeSegment>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[
    private String managementKey;

    /**
     * @return the management key as <code>groupId:artifactId:type</code>
     */
    public String getManagementKey()
    {
        if ( managementKey == null )
        {
            managementKey = groupId + ":" + artifactId + ":" + type + ( classifier != null ? ":" + classifier : "" );
        }
        return managementKey;
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class>
      <superClass>Contributor</superClass>
      <name>Developer</name>
      <description>Information about one of the committers on this project.</description>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>id</name>
          <version>3.0.0+</version>
          <description>The unique ID of the developer in the SCM.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>Exclusion</name>
      <version>4.0.0+</version>
      <description>
        <![CDATA[
        The <code>&lt;exclusion&gt;</code> element contains informations required to exclude
        an artifact to the project.
        ]]>
      </description>
      <fields>
        <field>
          <name>artifactId</name>
          <version>4.0.0+</version>
          <description>The artifact ID of the project to exclude.</description>
          <type>String</type>
          <required>true</required>
        </field>
        <field>
          <name>groupId</name>
          <version>4.0.0+</version>
          <description>The group ID of the project to exclude.</description>
          <type>String</type>
          <required>true</required>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>IssueManagement</name>
      <description>Information about the issue tracking (or bug tracking) system used to manage this
        project.</description>
      <version>4.0.0+</version>
      <fields>
        <field>
          <name>system</name>
          <version>4.0.0+</version>
          <description>The name of the issue management system, e.g. Bugzilla</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0+</version>
          <description>URL for the issue management system used by the project.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>License</name>
      <description>Describes the licenses for this project. This is used to generate the license
        page of the project's web site, as well as being taken into consideration in other reporting
        and validation. The licenses listed for the project are that of the project itself, and not
        of dependencies.</description>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full legal name of the license.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The official url for the license text.</description>
          <type>String</type>
        </field>
        <field>
          <name>distribution</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The primary method by which this project may be distributed.
            <dl>
              <dt>repo</dt>
              <dd>may be downloaded from the Maven repository</dd>
              <dt>manual</dt>
              <dd>user must manually download and install the dependency.</dd>
            </dl>
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>comments</name>
          <description>Addendum information pertaining to this license.</description>
          <version>3.0.0+</version>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>MailingList</name>
      <version>3.0.0+</version>
      <description>This element describes all of the mailing lists associated with a project. The
        auto-generated site references this information.</description>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The name of the mailing list.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>subscribe</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The email address or link that can be used to subscribe to
            the mailing list.  If this is an email address, a
            <code>mailto:</code> link will automatically be created
            when the documentation is created.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>unsubscribe</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The email address or link that can be used to unsubscribe to
            the mailing list.  If this is an email address, a
            <code>mailto:</code> link will automatically be created
            when the documentation is created.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>post</name>
          <version>3.0.0+</version>
          <description>
            <![CDATA[
            The email address or link that can be used to post to
            the mailing list.  If this is an email address, a
            <code>mailto:</code> link will automatically be created
            when the documentation is created.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>archive</name>
          <version>3.0.0+</version>
          <description>The link to a URL where you can browse the mailing list archive.</description>
          <type>String</type>
        </field>
        <field>
          <name>otherArchives</name>
          <version>3.0.0+</version>
          <description>The link to alternate URLs where you can browse the list archive.</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <comment>We could probably have a specific element for a dev mailing list for things like CI,
        and maybe even a specific element for the user and scm mailing lists. Then leave the more
        lose structure for any other type of mailing list.</comment>
    </class>
    <class java.clone="deep">
      <name>Organization</name>
      <description>Specifies the organization that produces this project.</description>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full name of the organization.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The URL to the organization's home page.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class java.clone="deep">
      <name>Scm</name>
      <version>4.0.0+</version>
      <description>
        <![CDATA[
        The <code>&lt;scm&gt;</code> element contains informations required to the SCM
        (Source Control Management) of the project.
        ]]>
      </description>
      <fields>
        <field>
          <name>connection</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The source control management system URL
            that describes the repository and how to connect to the
            repository. For more information, see the
            <a href="https://maven.apache.org/scm/scm-url-format.html">URL format</a>
            and <a href="https://maven.apache.org/scm/scms-overview.html">list of supported SCMs</a>.
            This connection is read-only.
            <br><b>Default value is</b>: parent value [+ path adjustment] + (artifactId or <code>project.directory</code> property) 
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>developerConnection</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            Just like <code>connection</code>, but for developers, i.e. this scm connection
            will not be read only.
            <br><b>Default value is</b>: parent value [+ path adjustment] + (artifactId or <code>project.directory</code> property)
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>tag</name>
          <version>4.0.0+</version>
          <description>The tag of current code. By default, it's set to HEAD during development.</description>
          <type>String</type>
          <defaultValue>HEAD</defaultValue>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The URL to the project's browsable SCM repository, such as ViewVC or Fisheye.
            <br><b>Default value is</b>: parent value [+ path adjustment] + (artifactId or <code>project.directory</code> property)
            ]]>
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class java.clone="deep"><!-- TBD keep in consumer? -->
      <name>RepositoryBase</name>
      <version>4.0.0+</version>
      <description>A repository contains the information needed for establishing connections with
        remote repository.</description>
      <fields>
        <field>
          <name>id</name>
          <version>4.0.0+</version>
          <required>true</required>
          <identifier>true</identifier>
          <description>
            <![CDATA[
            A unique identifier for a repository. This is used to match the repository
            to configuration in the <code>settings.xml</code> file, for example. Furthermore, the identifier is
            used during POM inheritance and profile injection to detect repositories that should be merged.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>name</name>
          <version>4.0.0+</version>
          <description>Human readable name of the repository.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0+</version>
          <required>true</required>
          <description>
            <![CDATA[
            The url of the repository, in the form <code>protocol://hostname/path</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>layout</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The type of layout this repository uses for locating and storing artifacts -
            can be <code>legacy</code> or <code>default</code>.
            ]]>
          </description>
          <type>String</type>
          <defaultValue>default</defaultValue>
        </field>
      </fields>
    </class>

    <class><!-- TBD keep in consumer? -->
      <name>Repository</name>
      <superClass>RepositoryBase</superClass>
      <version>4.0.0+</version>
      <description>A repository contains the information needed for establishing connections with
        remote repository.</description>
      <fields>
        <field>
          <name>releases</name>
          <version>4.0.0+</version>
          <description>How to handle downloading of releases from this repository.</description>
          <association>
            <type>RepositoryPolicy</type>
          </association>
        </field>
        <field>
          <name>snapshots</name>
          <version>4.0.0+</version>
          <description>How to handle downloading of snapshots from this repository.</description>
          <association>
            <type>RepositoryPolicy</type>
          </association>
        </field>
      </fields>
    </class>

    <class java.clone="deep"><!-- TBD keep in consumer? -->
      <name>RepositoryPolicy</name>
      <version>4.0.0+</version>
      <description>Download policy.</description>
      <fields>
        <field>
          <name>enabled</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            Whether to use this repository for downloading this type of artifact. Note: While the type
            of this field is <code>String</code> for technical reasons, the semantic type is actually
            <code>Boolean</code>. Default value is <code>true</code>.
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>updatePolicy</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            The frequency for downloading updates - can be
            <code>always,</code>
            <code>daily</code>
            (default),
            <code>interval:XXX</code>
            (in minutes) or
            <code>never</code>
            (only if it doesn't exist locally).
            ]]>
          </description>
          <type>String</type>
        </field>
        <field>
          <name>checksumPolicy</name>
          <version>4.0.0+</version>
          <description>
            <![CDATA[
            What to do when verification of an artifact checksum fails. Valid values are
            <code>ignore</code>
            ,
            <code>fail</code>
            or
            <code>warn</code>
            (the default).
            ]]>
          </description>
          <type>String</type>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[

    public boolean isEnabled()
    {
        return ( enabled != null ) ? Boolean.parseBoolean( enabled ) : true;
    }

    public void setEnabled( boolean enabled )
    {
        this.enabled = String.valueOf( enabled );
    }

            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>

    <!-- Profile support -->
    <class>
      <name>Profile</name>
      <superClass>ModelBase</superClass>
      <version>4.0.0+</version>
      <description>Modifications to the build process which is activated based on environmental
        parameters or command line arguments.</description>
      <fields>
        <field>
          <name>id</name>
          <required>true</required>
          <version>4.0.0+</version>
          <type>String</type>
          <defaultValue>default</defaultValue>
          <description>The identifier of this build profile. This is used for command line
            activation, and identifies profiles to be merged.
          </description>
        </field>
        <field>
          <name>activation</name>
          <version>4.0.0+</version>
          <description>The conditional logic which will automatically trigger the inclusion of this
            profile.</description>
          <association>
            <type>Activation</type>
          </association>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[
    public static final String SOURCE_POM = "pom";

    public static final String SOURCE_SETTINGS = "settings.xml";

    // We don't want this to be parseable...it's sort of 'hidden'
    // default source for this profile is in the pom itself.
    private String source = SOURCE_POM;

    public void setSource( String source )
    {
        this.source = source;
    }

    public String getSource()
    {
        return source;
    }

    /**
     * @see java.lang.Object#toString()
     */
    public String toString()
    {
        return "Profile {id: " + getId() + ", source: " + getSource() + "}";
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class java.clone="deep"><!-- TBD keep in consumer? -->
      <name>Activation</name>
      <version>4.0.0+</version>
      <description>The conditions within the build runtime environment which will trigger the
        automatic inclusion of the build profile. Multiple conditions can be defined, which must
        be all satisfied to activate the profile.
      </description>
      <fields>
        <field>
          <name>activeByDefault</name>
          <version>4.0.0+</version>
          <type>boolean</type>
          <description>If set to true, this profile will be active unless another profile in this
            pom is activated using the command line -P option or by one of that profile's
            activators.</description>
        </field>
        <field>
          <name>jdk</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            Specifies that this profile will be activated when a matching JDK is detected.
            For example, <code>1.4</code> only activates on JDKs versioned 1.4,
            while <code>!1.4</code> matches any JDK that is not version 1.4. Ranges are supported too:
            <code>[1.5,)</code> activates when the JDK is 1.5 minimum.
            ]]>
          </description>
        </field>
        <field>
          <name>os</name>
          <version>4.0.0+</version>
          <description>Specifies that this profile will be activated when matching operating system
            attributes are detected.</description>
          <association>
            <type>ActivationOS</type>
          </association>
        </field>
      </fields>
    </class>
    <class java.clone="deep"><!-- TBD keep in consumer? -->
      <name>ActivationOS</name>
      <version>4.0.0+</version>
      <description>This is an activator which will detect an operating system's attributes in order
        to activate its profile.</description>
      <fields>
        <field>
          <name>name</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The name of the operating system to be used to activate the profile. This must be an exact match
            of the <code>${os.name}</code> Java property, such as <code>Windows XP</code>.
            ]]>
          </description>
        </field>
        <field>
          <name>family</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The general family of the OS to be used to activate the profile, such as
            <code>windows</code> or <code>unix</code>.
            ]]>
          </description>
        </field>
        <field>
          <name>arch</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>The architecture of the operating system to be used to activate the
          profile.</description>
        </field>
        <field>
          <name>version</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>The version of the operating system to be used to activate the
          profile.</description>
        </field>
      </fields>
    </class>
    <!-- /BuildProfile support -->
    <class java.clone="deep">
      <name>Prerequisites</name>
      <version>4.0.0+</version>
      <description>Describes the prerequisites a project can have.</description>
      <fields>
        <field>
          <name>maven</name>
          <version>4.0.0+</version>
          <type>String</type>
          <defaultValue>2.0</defaultValue>
          <description><![CDATA[
            For a plugin project (packaging is <code>maven-plugin</code>), the minimum version of
            Maven required to use the resulting plugin.<br>
            In Maven 2, this was also specifying the minimum version of Maven required to build a
            project, but this usage is <b>deprecated</b> in Maven 3 and not checked any more: use
            the <a href="https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html">Maven Enforcer Plugin's
            <code>requireMavenVersion</code> rule</a> instead.
            ]]>
          </description>
          <required>false</required>
        </field>
      </fields>
    </class>
    <class java.clone="deep"><!-- TBD keep in consumer? -->
      <name>Relocation</name>
      <version>4.0.0+</version>
      <description>Describes where an artifact has moved to. If any of the values are omitted, it is
        assumed to be the same as it was before.</description>
      <fields>
        <field>
          <name>groupId</name>
          <version>4.0.0+</version>
          <description>The group ID the artifact has moved to.</description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>4.0.0+</version>
          <description>The new artifact ID of the artifact.</description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>4.0.0+</version>
          <description>The new version of the artifact.</description>
          <type>String</type>
        </field>
        <field>
          <name>message</name>
          <version>4.0.0+</version>
          <description>An additional message to show the user about the move, such as the reason.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class locationTracker="locations" java.clone="shallow">
      <name>InputLocation</name>
      <version>4.0.0+</version>
      <fields>
        <!-- line, column and source fields are auto-generated by Modello -->
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[

    @Override
    public String toString()
    {
        return getLineNumber() + " : " + getColumnNumber() + ", " + getSource();
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class sourceTracker="source" java.clone="shallow">
      <name>InputSource</name>
      <version>4.0.0+</version>
      <fields>
        <field>
          <name>modelId</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The identifier of the POM in the format {@code <groupId>:<artifactId>:<version>}.
            ]]>
          </description>
        </field>
        <field>
          <name>location</name>
          <version>4.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The path/URL of the POM or {@code null} if unknown.
            ]]>
          </description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0+</version>
          <code>
            <![CDATA[
    @Override
    public String toString()
    {
        return getModelId() + " " + getLocation();
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
  </classes>
</model>
